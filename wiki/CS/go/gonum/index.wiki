= Learning Gonum = 

https://www.gonum.org/post/introtogonum/

Learning Gonum

The best way to learn about particular packages and functions is through the source code documentation. The godoc website https://godoc.org/  automatically generates documentation pages from publically available source code. For most Go packages (not just Gonum), going to https://godoc.org/<package-import-path> will give you documentation about that particular package. For example, https://godoc.org/gonum.org/v1/gonum/mat will give documentation about Gonum’s matrix package, as well as documentation for specific functions. Go to https://godoc.org/gonum.org/v1/gonum/graph/topo and you will see documentation about our graph topology routines, for example for finding the “strongly connected components” of a graph. Note that sometimes godoc lists functions below the relevant type, for example the function to create a new dense matrix mat.NewDense, is listed under the Dense type. At the bottom of the index you will see a list of specific code examples, and at the very bottom of the godoc page, you can see a list of subpackages, if any (for instance, scroll to the bottom of https://godoc.org/gonum.org/v1/gonum/stat).

https://github.com/gonum/gonum
Gonum is a set of numeric libraries for the Go programming language. It contains libraries for matrices, statistics, optimization, and more 
https://www.gonum.org/

Intro to gonum  https://www.gonum.org/post/introtogonum/
https://www.gonum.org/talks/intro_to_go_and_concurrency/

Very helpful picture, but how to get it.
https://talks.godoc.org/github.com/gonum/talks/2015/intro_concurrency.slide#5

In the search box, examples I tried: dsp, spline, optimization

https://golang.org/pkg/

https://godoc.org/
https://godoc.org/github.com/mjibson/go-dsp/dsputils
https://github.com/mjibson/go-dsp
$ go get github.com/mjibson/go-dsp/fft


Gonum Tutorial: Linear Algebra in Go:
https://medium.com/wireless-registry-engineering/gonum-tutorial-linear-algebra-in-go-21ef136fc2d7


== package present ==
https://godoc.org/golang.org/x/tools/present
https://talks.godoc.org/



